declare global {
  const ALLOWED_TABLES: typeof import('../../server/utils/admin-validation')['ALLOWED_TABLES']
  const TABLE_VALIDATION_RULES: typeof import('../../server/utils/admin-validation')['TABLE_VALIDATION_RULES']
  const WebhookLogger: typeof import('../../server/utils/webhookLogger')['WebhookLogger']
  const __buildAssetsURL: typeof import('../../node_modules/nuxt/dist/core/runtime/nitro/utils/paths')['buildAssetsURL']
  const __publicAssetsURL: typeof import('../../node_modules/nuxt/dist/core/runtime/nitro/utils/paths')['publicAssetsURL']
  const appendCorsHeaders: typeof import('../../node_modules/h3')['appendCorsHeaders']
  const appendCorsPreflightHeaders: typeof import('../../node_modules/h3')['appendCorsPreflightHeaders']
  const appendHeader: typeof import('../../node_modules/h3')['appendHeader']
  const appendHeaders: typeof import('../../node_modules/h3')['appendHeaders']
  const appendResponseHeader: typeof import('../../node_modules/h3')['appendResponseHeader']
  const appendResponseHeaders: typeof import('../../node_modules/h3')['appendResponseHeaders']
  const assertMethod: typeof import('../../node_modules/h3')['assertMethod']
  const assignLicenseToTransaction: typeof import('../../server/utils/licenseService')['assignLicenseToTransaction']
  const cachedEventHandler: typeof import('../../node_modules/nitropack/dist/runtime/internal/cache')['cachedEventHandler']
  const cachedFunction: typeof import('../../node_modules/nitropack/dist/runtime/internal/cache')['cachedFunction']
  const callNodeListener: typeof import('../../node_modules/h3')['callNodeListener']
  const clearResponseHeaders: typeof import('../../node_modules/h3')['clearResponseHeaders']
  const clearSession: typeof import('../../node_modules/h3')['clearSession']
  const createApp: typeof import('../../node_modules/h3')['createApp']
  const createAppEventHandler: typeof import('../../node_modules/h3')['createAppEventHandler']
  const createAuditLogEntry: typeof import('../../server/utils/admin-security')['createAuditLogEntry']
  const createError: typeof import('../../node_modules/h3')['createError']
  const createEvent: typeof import('../../node_modules/h3')['createEvent']
  const createEventStream: typeof import('../../node_modules/h3')['createEventStream']
  const createMissingTables: typeof import('../../server/utils/setup-database-integration.js')['createMissingTables']
  const createRouter: typeof import('../../node_modules/h3')['createRouter']
  const db: typeof import('../../server/utils/db')['default']
  const defaultContentType: typeof import('../../node_modules/h3')['defaultContentType']
  const defineAppConfig: typeof import('../../node_modules/nuxt/dist/core/runtime/nitro/utils/config')['defineAppConfig']
  const defineCachedEventHandler: typeof import('../../node_modules/nitropack/dist/runtime/internal/cache')['defineCachedEventHandler']
  const defineCachedFunction: typeof import('../../node_modules/nitropack/dist/runtime/internal/cache')['defineCachedFunction']
  const defineEventHandler: typeof import('../../node_modules/h3')['defineEventHandler']
  const defineLazyEventHandler: typeof import('../../node_modules/h3')['defineLazyEventHandler']
  const defineNitroErrorHandler: typeof import('../../node_modules/nitropack/dist/runtime/internal/error/utils')['defineNitroErrorHandler']
  const defineNitroPlugin: typeof import('../../node_modules/nitropack/dist/runtime/internal/plugin')['defineNitroPlugin']
  const defineNodeListener: typeof import('../../node_modules/h3')['defineNodeListener']
  const defineNodeMiddleware: typeof import('../../node_modules/h3')['defineNodeMiddleware']
  const defineRenderHandler: typeof import('../../node_modules/nitropack/dist/runtime/internal/renderer')['defineRenderHandler']
  const defineRequestMiddleware: typeof import('../../node_modules/h3')['defineRequestMiddleware']
  const defineResponseMiddleware: typeof import('../../node_modules/h3')['defineResponseMiddleware']
  const defineRouteMeta: typeof import('../../node_modules/nitropack/dist/runtime/internal/meta')['defineRouteMeta']
  const defineTask: typeof import('../../node_modules/nitropack/dist/runtime/internal/task')['defineTask']
  const defineWebSocket: typeof import('../../node_modules/h3')['defineWebSocket']
  const defineWebSocketHandler: typeof import('../../node_modules/h3')['defineWebSocketHandler']
  const deleteCookie: typeof import('../../node_modules/h3')['deleteCookie']
  const detectSuspiciousPatterns: typeof import('../../server/utils/admin-security')['detectSuspiciousPatterns']
  const dynamicEventHandler: typeof import('../../node_modules/h3')['dynamicEventHandler']
  const eventHandler: typeof import('../../node_modules/h3')['eventHandler']
  const fetchWithEvent: typeof import('../../node_modules/h3')['fetchWithEvent']
  const formatPrice: typeof import('../../server/utils/midtrans-helper')['formatPrice']
  const fromNodeMiddleware: typeof import('../../node_modules/h3')['fromNodeMiddleware']
  const fromPlainHandler: typeof import('../../node_modules/h3')['fromPlainHandler']
  const fromWebHandler: typeof import('../../node_modules/h3')['fromWebHandler']
  const generateOrderId: typeof import('../../server/utils/order-id-generator')['generateOrderId']
  const generateOrderIdWithProduct: typeof import('../../server/utils/order-id-generator')['generateOrderIdWithProduct']
  const generateProductSlug: typeof import('../../server/utils/admin-validation')['generateProductSlug']
  const generateSecureToken: typeof import('../../server/utils/admin-security')['generateSecureToken']
  const generateTestOrderId: typeof import('../../server/utils/order-id-generator')['generateTestOrderId']
  const getAvailableLicense: typeof import('../../server/utils/licenseService')['getAvailableLicense']
  const getCookie: typeof import('../../node_modules/h3')['getCookie']
  const getHeader: typeof import('../../node_modules/h3')['getHeader']
  const getHeaders: typeof import('../../node_modules/h3')['getHeaders']
  const getMethod: typeof import('../../node_modules/h3')['getMethod']
  const getMidtransApiUrl: typeof import('../../server/utils/midtrans-helper')['getMidtransApiUrl']
  const getProductInfo: typeof import('../../server/utils/licenseService')['getProductInfo']
  const getProxyRequestHeaders: typeof import('../../node_modules/h3')['getProxyRequestHeaders']
  const getQuery: typeof import('../../node_modules/h3')['getQuery']
  const getRateLimiterStats: typeof import('../../server/utils/rateLimiter')['getRateLimiterStats']
  const getRequestFingerprint: typeof import('../../node_modules/h3')['getRequestFingerprint']
  const getRequestHeader: typeof import('../../node_modules/h3')['getRequestHeader']
  const getRequestHeaders: typeof import('../../node_modules/h3')['getRequestHeaders']
  const getRequestHost: typeof import('../../node_modules/h3')['getRequestHost']
  const getRequestIP: typeof import('../../node_modules/h3')['getRequestIP']
  const getRequestPath: typeof import('../../node_modules/h3')['getRequestPath']
  const getRequestProtocol: typeof import('../../node_modules/h3')['getRequestProtocol']
  const getRequestURL: typeof import('../../node_modules/h3')['getRequestURL']
  const getRequestWebStream: typeof import('../../node_modules/h3')['getRequestWebStream']
  const getResponseHeader: typeof import('../../node_modules/h3')['getResponseHeader']
  const getResponseHeaders: typeof import('../../node_modules/h3')['getResponseHeaders']
  const getResponseStatus: typeof import('../../node_modules/h3')['getResponseStatus']
  const getResponseStatusText: typeof import('../../node_modules/h3')['getResponseStatusText']
  const getRouteRules: typeof import('../../node_modules/nitropack/dist/runtime/internal/route-rules')['getRouteRules']
  const getRouterParam: typeof import('../../node_modules/h3')['getRouterParam']
  const getRouterParams: typeof import('../../node_modules/h3')['getRouterParams']
  const getSession: typeof import('../../node_modules/h3')['getSession']
  const getValidatedQuery: typeof import('../../node_modules/h3')['getValidatedQuery']
  const getValidatedRouterParams: typeof import('../../node_modules/h3')['getValidatedRouterParams']
  const handleCacheHeaders: typeof import('../../node_modules/h3')['handleCacheHeaders']
  const handleCors: typeof import('../../node_modules/h3')['handleCors']
  const hashSensitiveData: typeof import('../../server/utils/admin-security')['hashSensitiveData']
  const isCorsOriginAllowed: typeof import('../../node_modules/h3')['isCorsOriginAllowed']
  const isError: typeof import('../../node_modules/h3')['isError']
  const isEvent: typeof import('../../node_modules/h3')['isEvent']
  const isEventHandler: typeof import('../../node_modules/h3')['isEventHandler']
  const isMethod: typeof import('../../node_modules/h3')['isMethod']
  const isPreflightRequest: typeof import('../../node_modules/h3')['isPreflightRequest']
  const isStream: typeof import('../../node_modules/h3')['isStream']
  const isValidOrderId: typeof import('../../server/utils/order-id-generator')['isValidOrderId']
  const isWebResponse: typeof import('../../node_modules/h3')['isWebResponse']
  const lazyEventHandler: typeof import('../../node_modules/h3')['lazyEventHandler']
  const logAdminAction: typeof import('../../server/utils/admin-security')['logAdminAction']
  const midtransConfig: typeof import('../../server/utils/config')['midtransConfig']
  const nitroPlugin: typeof import('../../node_modules/nitropack/dist/runtime/internal/plugin')['nitroPlugin']
  const parseCookies: typeof import('../../node_modules/h3')['parseCookies']
  const parseOrderId: typeof import('../../server/utils/order-id-generator')['parseOrderId']
  const populateSampleData: typeof import('../../server/utils/setup-database-integration.js')['populateSampleData']
  const processLicenseDelivery: typeof import('../../server/utils/licenseService')['processLicenseDelivery']
  const processMultipleLicenses: typeof import('../../server/utils/licenseService')['processMultipleLicenses']
  const promisifyNodeListener: typeof import('../../node_modules/h3')['promisifyNodeListener']
  const proxyRequest: typeof import('../../node_modules/h3')['proxyRequest']
  const rateLimiter: typeof import('../../server/utils/rateLimiter')['default']
  const readBody: typeof import('../../node_modules/h3')['readBody']
  const readFormData: typeof import('../../node_modules/h3')['readFormData']
  const readMultipartFormData: typeof import('../../node_modules/h3')['readMultipartFormData']
  const readRawBody: typeof import('../../node_modules/h3')['readRawBody']
  const readValidatedBody: typeof import('../../node_modules/h3')['readValidatedBody']
  const removeResponseHeader: typeof import('../../node_modules/h3')['removeResponseHeader']
  const requireAdmin: typeof import('../../server/utils/auth')['requireAdmin']
  const requireAuth: typeof import('../../server/utils/auth')['requireAuth']
  const requiresConfirmation: typeof import('../../server/utils/admin-security')['requiresConfirmation']
  const runTask: typeof import('../../node_modules/nitropack/dist/runtime/internal/task')['runTask']
  const sanitizeSearchQuery: typeof import('../../server/utils/admin-security')['sanitizeSearchQuery']
  const sanitizeStatusCode: typeof import('../../node_modules/h3')['sanitizeStatusCode']
  const sanitizeStatusMessage: typeof import('../../node_modules/h3')['sanitizeStatusMessage']
  const sanitizeString: typeof import('../../server/utils/admin-validation')['sanitizeString']
  const scheduledTasks: typeof import('../../server/utils/scheduledTasks')['default']
  const sealSession: typeof import('../../node_modules/h3')['sealSession']
  const send: typeof import('../../node_modules/h3')['send']
  const sendError: typeof import('../../node_modules/h3')['sendError']
  const sendIterable: typeof import('../../node_modules/h3')['sendIterable']
  const sendLicenseEmail: typeof import('../../server/utils/emailService')['sendLicenseEmail']
  const sendMultipleLicenseEmail: typeof import('../../server/utils/emailService')['sendMultipleLicenseEmail']
  const sendNoContent: typeof import('../../node_modules/h3')['sendNoContent']
  const sendProxy: typeof import('../../node_modules/h3')['sendProxy']
  const sendRedirect: typeof import('../../node_modules/h3')['sendRedirect']
  const sendStream: typeof import('../../node_modules/h3')['sendStream']
  const sendWebResponse: typeof import('../../node_modules/h3')['sendWebResponse']
  const serveStatic: typeof import('../../node_modules/h3')['serveStatic']
  const setCookie: typeof import('../../node_modules/h3')['setCookie']
  const setHeader: typeof import('../../node_modules/h3')['setHeader']
  const setHeaders: typeof import('../../node_modules/h3')['setHeaders']
  const setResponseHeader: typeof import('../../node_modules/h3')['setResponseHeader']
  const setResponseHeaders: typeof import('../../node_modules/h3')['setResponseHeaders']
  const setResponseStatus: typeof import('../../node_modules/h3')['setResponseStatus']
  const setSecurityHeaders: typeof import('../../server/utils/admin-security')['setSecurityHeaders']
  const setupDatabaseIntegration: typeof import('../../server/utils/setup-database-integration.js')['setupDatabaseIntegration']
  const splitCookiesString: typeof import('../../node_modules/h3')['splitCookiesString']
  const tableDefinitions: typeof import('../../server/utils/setup-database-integration.js')['tableDefinitions']
  const testEmailConnection: typeof import('../../server/utils/emailService')['testEmailConnection']
  const toEventHandler: typeof import('../../node_modules/h3')['toEventHandler']
  const toNodeListener: typeof import('../../node_modules/h3')['toNodeListener']
  const toPlainHandler: typeof import('../../node_modules/h3')['toPlainHandler']
  const toWebHandler: typeof import('../../node_modules/h3')['toWebHandler']
  const toWebRequest: typeof import('../../node_modules/h3')['toWebRequest']
  const unsealSession: typeof import('../../node_modules/h3')['unsealSession']
  const updateSession: typeof import('../../node_modules/h3')['updateSession']
  const updateTransactionWithLicense: typeof import('../../server/utils/licenseService')['updateTransactionWithLicense']
  const useAppConfig: typeof import('../../node_modules/nitropack/dist/runtime/internal/config')['useAppConfig']
  const useBase: typeof import('../../node_modules/h3')['useBase']
  const useCache: typeof import('../../server/utils/cache')['useCache']
  const useEvent: typeof import('../../node_modules/nitropack/dist/runtime/internal/context')['useEvent']
  const useNitroApp: typeof import('../../node_modules/nitropack/dist/runtime/internal/app')['useNitroApp']
  const useOnlineDB: typeof import('../../server/utils/config')['useOnlineDB']
  const useRuntimeConfig: typeof import('../../node_modules/nitropack/dist/runtime/internal/config')['useRuntimeConfig']
  const useSession: typeof import('../../node_modules/h3')['useSession']
  const useStorage: typeof import('../../node_modules/nitropack/dist/runtime/internal/storage')['useStorage']
  const useSupabase: typeof import('../../server/utils/config')['useSupabase']
  const validateAdminSession: typeof import('../../server/utils/admin-security')['validateAdminSession']
  const validateColumnName: typeof import('../../server/utils/admin-security')['validateColumnName']
  const validateDatabaseSchema: typeof import('../../server/utils/setup-database-integration.js')['validateDatabaseSchema']
  const validateEmail: typeof import('../../server/utils/admin-validation')['validateEmail']
  const validateFileUpload: typeof import('../../server/utils/admin-validation')['validateFileUpload']
  const validateImageUrl: typeof import('../../server/utils/admin-validation')['validateImageUrl']
  const validatePaginationParams: typeof import('../../server/utils/admin-validation')['validatePaginationParams']
  const validateProductSlug: typeof import('../../server/utils/admin-validation')['validateProductSlug']
  const validateRecordData: typeof import('../../server/utils/admin-validation')['validateRecordData']
  const validateRecordId: typeof import('../../server/utils/admin-validation')['validateRecordId']
  const validateRequestOrigin: typeof import('../../server/utils/admin-security')['validateRequestOrigin']
  const validateSchema: typeof import('../../server/utils/validate-schema')['default']
  const validateSlug: typeof import('../../server/utils/admin-validation')['validateSlug']
  const validateSortOrder: typeof import('../../server/utils/admin-security')['validateSortOrder']
  const validateTableName: typeof import('../../server/utils/admin-validation')['validateTableName']
  const validateUrl: typeof import('../../server/utils/admin-validation')['validateUrl']
  const validateUserSession: typeof import('../../server/utils/auth')['validateUserSession']
  const verifySignature: typeof import('../../server/utils/midtrans-helper')['verifySignature']
  const webhookLogger: typeof import('../../server/utils/webhookLogger')['default']
  const writeEarlyHints: typeof import('../../node_modules/h3')['writeEarlyHints']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { WebhookLogger } from '../../server/utils/webhookLogger'
  import('../../server/utils/webhookLogger')
}
export { useNitroApp } from 'nitropack/runtime/internal/app';
export { useRuntimeConfig, useAppConfig } from 'nitropack/runtime/internal/config';
export { defineNitroPlugin, nitroPlugin } from 'nitropack/runtime/internal/plugin';
export { defineCachedFunction, defineCachedEventHandler, cachedFunction, cachedEventHandler } from 'nitropack/runtime/internal/cache';
export { useStorage } from 'nitropack/runtime/internal/storage';
export { defineRenderHandler } from 'nitropack/runtime/internal/renderer';
export { defineRouteMeta } from 'nitropack/runtime/internal/meta';
export { getRouteRules } from 'nitropack/runtime/internal/route-rules';
export { useEvent } from 'nitropack/runtime/internal/context';
export { defineTask, runTask } from 'nitropack/runtime/internal/task';
export { defineNitroErrorHandler } from 'nitropack/runtime/internal/error/utils';
export { appendCorsHeaders, appendCorsPreflightHeaders, appendHeader, appendHeaders, appendResponseHeader, appendResponseHeaders, assertMethod, callNodeListener, clearResponseHeaders, clearSession, createApp, createAppEventHandler, createError, createEvent, createEventStream, createRouter, defaultContentType, defineEventHandler, defineLazyEventHandler, defineNodeListener, defineNodeMiddleware, defineRequestMiddleware, defineResponseMiddleware, defineWebSocket, defineWebSocketHandler, deleteCookie, dynamicEventHandler, eventHandler, fetchWithEvent, fromNodeMiddleware, fromPlainHandler, fromWebHandler, getCookie, getHeader, getHeaders, getMethod, getProxyRequestHeaders, getQuery, getRequestFingerprint, getRequestHeader, getRequestHeaders, getRequestHost, getRequestIP, getRequestPath, getRequestProtocol, getRequestURL, getRequestWebStream, getResponseHeader, getResponseHeaders, getResponseStatus, getResponseStatusText, getRouterParam, getRouterParams, getSession, getValidatedQuery, getValidatedRouterParams, handleCacheHeaders, handleCors, isCorsOriginAllowed, isError, isEvent, isEventHandler, isMethod, isPreflightRequest, isStream, isWebResponse, lazyEventHandler, parseCookies, promisifyNodeListener, proxyRequest, readBody, readFormData, readMultipartFormData, readRawBody, readValidatedBody, removeResponseHeader, sanitizeStatusCode, sanitizeStatusMessage, sealSession, send, sendError, sendIterable, sendNoContent, sendProxy, sendRedirect, sendStream, sendWebResponse, serveStatic, setCookie, setHeader, setHeaders, setResponseHeader, setResponseHeaders, setResponseStatus, splitCookiesString, toEventHandler, toNodeListener, toPlainHandler, toWebHandler, toWebRequest, unsealSession, updateSession, useBase, useSession, writeEarlyHints } from 'h3';
export { buildAssetsURL as __buildAssetsURL, publicAssetsURL as __publicAssetsURL } from 'C:/Users/E31/Downloads/project_nixty/node_modules/nuxt/dist/core/runtime/nitro/utils/paths';
export { defineAppConfig } from 'C:/Users/E31/Downloads/project_nixty/node_modules/nuxt/dist/core/runtime/nitro/utils/config';
export { validateDatabaseSchema, createMissingTables, populateSampleData, setupDatabaseIntegration, tableDefinitions } from 'C:/Users/E31/Downloads/project_nixty/server/utils/setup-database-integration';
export { validateColumnName, validateSortOrder, sanitizeSearchQuery, detectSuspiciousPatterns, generateSecureToken, hashSensitiveData, createAuditLogEntry, logAdminAction, requiresConfirmation, validateAdminSession, setSecurityHeaders, validateRequestOrigin } from 'C:/Users/E31/Downloads/project_nixty/server/utils/admin-security';
export { ALLOWED_TABLES, TABLE_VALIDATION_RULES, validateTableName, sanitizeString, validateEmail, validateUrl, validateSlug, generateProductSlug, validateProductSlug, validateRecordData, validateRecordId, validatePaginationParams, validateFileUpload, validateImageUrl } from 'C:/Users/E31/Downloads/project_nixty/server/utils/admin-validation';
export { validateUserSession, requireAuth, requireAdmin } from 'C:/Users/E31/Downloads/project_nixty/server/utils/auth';
export { useCache } from 'C:/Users/E31/Downloads/project_nixty/server/utils/cache';
export { useSupabase, useOnlineDB, midtransConfig } from 'C:/Users/E31/Downloads/project_nixty/server/utils/config';
export { default as db } from 'C:/Users/E31/Downloads/project_nixty/server/utils/db';
export { sendMultipleLicenseEmail, sendLicenseEmail, testEmailConnection } from 'C:/Users/E31/Downloads/project_nixty/server/utils/emailService';
export { getAvailableLicense, assignLicenseToTransaction, getProductInfo, processLicenseDelivery, processMultipleLicenses, updateTransactionWithLicense } from 'C:/Users/E31/Downloads/project_nixty/server/utils/licenseService';
export { verifySignature, getMidtransApiUrl, formatPrice } from 'C:/Users/E31/Downloads/project_nixty/server/utils/midtrans-helper';
export { generateOrderId, generateOrderIdWithProduct, generateTestOrderId, parseOrderId, isValidOrderId } from 'C:/Users/E31/Downloads/project_nixty/server/utils/order-id-generator';
export { default as rateLimiter, getRateLimiterStats } from 'C:/Users/E31/Downloads/project_nixty/server/utils/rateLimiter';
export { default as scheduledTasks } from 'C:/Users/E31/Downloads/project_nixty/server/utils/scheduledTasks';
export { default as validateSchema } from 'C:/Users/E31/Downloads/project_nixty/server/utils/validate-schema';
export { default as webhookLogger, WebhookLogger } from 'C:/Users/E31/Downloads/project_nixty/server/utils/webhookLogger';
-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE nixty.categories (
  id integer NOT NULL DEFAULT nextval('nixty.categories_id_seq'::regclass),
  name character varying NOT NULL,
  slug character varying NOT NULL UNIQUE,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);
CREATE TABLE nixty.orders (
  id integer NOT NULL DEFAULT nextval('nixty.transactions_id_seq'::regclass),
  user_id integer,
  product_id integer,
  quantity integer DEFAULT 1,
  total numeric NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['pending'::text, 'completed'::text, 'failed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  order_id character varying NOT NULL UNIQUE,
  license_pdf_sent boolean DEFAULT false,
  license_sent_at timestamp without time zone,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES nixty.users(id),
  CONSTRAINT transactions_product_id_fkey FOREIGN KEY (product_id) REFERENCES nixty.products(id)
);
CREATE TABLE nixty.orders_license (
  transaction_id integer NOT NULL,
  license_id integer,
  order_ref character varying,
  CONSTRAINT orders_license_pkey PRIMARY KEY (transaction_id),
  CONSTRAINT transaction_license_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES nixty.orders(id),
  CONSTRAINT transaction_license_license_id_fkey FOREIGN KEY (license_id) REFERENCES nixty.product_license_base(id)
);
CREATE TABLE nixty.payment_gateway_logs (
  id integer NOT NULL DEFAULT nextval('nixty.payment_gateway_logs_id_seq'::regclass),
  transaction_id integer,
  key character varying NOT NULL,
  value text,
  order_ref character varying,
  CONSTRAINT payment_gateway_logs_pkey PRIMARY KEY (id),
  CONSTRAINT payment_gateway_logs_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES nixty.orders(id)
);
CREATE TABLE nixty.product_license_accounts (
  id integer NOT NULL,
  email character varying NOT NULL,
  password character varying NOT NULL,
  CONSTRAINT product_license_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT product_license_accounts_id_fkey FOREIGN KEY (id) REFERENCES nixty.product_license_base(id)
);
CREATE TABLE nixty.product_license_base (
  id integer NOT NULL DEFAULT nextval('nixty.product_license_base_id_seq'::regclass),
  product_id integer,
  license_type character varying NOT NULL CHECK (license_type::text = ANY (ARRAY['product_key'::text, 'email_password'::text])),
  status text DEFAULT 'available'::text CHECK (status = ANY (ARRAY['available'::text, 'used'::text, 'expired'::text, 'reserved'::text])),
  notes text,
  send_license integer NOT NULL DEFAULT 0,
  max_usage integer NOT NULL DEFAULT 1,
  CONSTRAINT product_license_base_pkey PRIMARY KEY (id),
  CONSTRAINT product_license_base_product_id_fkey FOREIGN KEY (product_id) REFERENCES nixty.products(id)
);
CREATE TABLE nixty.product_license_keys (
  id integer NOT NULL,
  product_key character varying NOT NULL,
  CONSTRAINT product_license_keys_pkey PRIMARY KEY (id),
  CONSTRAINT product_license_keys_id_fkey FOREIGN KEY (id) REFERENCES nixty.product_license_base(id)
);
CREATE TABLE nixty.products (
  id integer NOT NULL DEFAULT nextval('nixty.products_id_seq'::regclass),
  category_id integer,
  name character varying NOT NULL,
  description text,
  price numeric NOT NULL,
  image_url character varying,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text])),
  created_at timestamp with time zone DEFAULT now(),
  slug character varying,
  guide_pdf_path character varying,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id) REFERENCES nixty.categories(id)
);
CREATE TABLE nixty.users (
  id integer NOT NULL DEFAULT nextval('nixty.users_id_seq'::regclass),
  email character varying NOT NULL UNIQUE,
  password character varying NOT NULL,
  name character varying,
  account_type text NOT NULL DEFAULT 'user'::text CHECK (account_type = ANY (ARRAY['user'::text, 'admin'::text])),
  reset_token character varying,
  reset_token_expires timestamp with time zone,
  phone character varying,
  google_id character varying,
  profile_picture character varying,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
---
alwaysApply: true
---

Core Directives & Unbreakable Rules:
Technology Stack Preference (The Golden Rule):
Vue.js is the Default: For any frontend component, user interface, or application, you MUST use Vue.js (latest stable version, Vue 3). Always structure your responses as Vue Single File Components (.vue files) unless I specify otherwise.
JavaScript First, TypeScript Rarely: You MUST write all application logic, component scripts, and utility functions in modern, clean JavaScript (ES6+). You are to avoid TypeScript. The only exception is if I explicitly ask for a TypeScript solution, or if a critical library is exclusively written in TypeScript. In that rare case, you must first provide the JavaScript-based solution and then separately suggest the TypeScript alternative, explaining why it might be necessary.
Minimalism: Keep solutions focused and avoid adding unnecessary libraries or dependencies.
Synchronized & Scoped Styling:
When you generate a Vue component, you MUST also provide the corresponding CSS to style it.
To ensure styles are "in sync" and do not conflict with other parts of the application, you MUST place all CSS within the <style scoped> block of the Vue Single File Component. This is non-negotiable.
The styling should be clean, modern, and directly relevant to the component's HTML structure.
Data Source: The nixty.sql Canon:
Your primary source of truth for all data structures, content, and database schemas is the nixty.sql file provided below in the "DATABASE CONTEXT" section.
Before answering any request that involves data (e.g., "create a user profile," "list products," "make a form to add an article"), you MUST first analyze the CREATE TABLE statements in nixty.sql.
Use the table schemas (column names, data types, relationships) from nixty.sql to:
Generate realistic mock data for your components.
Define the structure of JavaScript objects in your component's state (data() function).
Design form fields that correspond to the database columns.
Code Presentation:
All code must be presented in clear, well-formatted markdown code blocks with the correct language identifier (e.g., vue,javascript, css,sql).
Provide brief, clear explanations for your code, describing what it does and why you made certain choices that align with these rules.